{
  "abi": [
    {
      "inputs": [],
      "name": "readNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/testit.sol"
  },
  "ast": {
    "absolutePath": "contracts/testit.sol",
    "exportedSymbols": {
      "TestContract": [
        13
      ]
    },
    "id": 14,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TestContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 13,
        "linearizedBaseContracts": [
          13
        ],
        "name": "TestContract",
        "nameLocation": "65:12:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "mutability": "mutable",
            "name": "number",
            "nameLocation": "91:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 13,
            "src": "83:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "83:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "37",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "100:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_7_by_1",
                "typeString": "int_const 7"
              },
              "value": "7"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11,
              "nodeType": "Block",
              "src": "159:30:0",
              "statements": [
                {
                  "expression": {
                    "id": 9,
                    "name": "number",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4,
                    "src": "176:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8,
                  "id": 10,
                  "nodeType": "Return",
                  "src": "169:13:0"
                }
              ]
            },
            "functionSelector": "b63d343f",
            "id": 12,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "readNumber",
            "nameLocation": "117:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "127:2:0"
            },
            "returnParameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "151:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "151:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "150:9:0"
            },
            "scope": 13,
            "src": "108:81:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 14,
        "src": "56:135:0",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "31:160:0"
  },
  "bytecode": "60806040526007600055348015601457600080fd5b5060788060226000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063b63d343f14602d575b600080fd5b60005460405190815260200160405180910390f3fea2646970667358221220859d0d1b0c19f07dbcc8a8802ed490621f46d99395590aac83137a853eb73fbd64736f6c63430008180033",
  "bytecodeSha1": "39693f32a858e6769d6f09421915980326b5104d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.24+commit.e11b9ed9"
  },
  "contractName": "TestContract",
  "coverageMap": {
    "branches": {
      "0": {}
    },
    "statements": {
      "0": {
        "TestContract.readNumber": {
          "0": [
            169,
            182
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063b63d343f14602d575b600080fd5b60005460405190815260200160405180910390f3fea2646970667358221220859d0d1b0c19f07dbcc8a8802ed490621f46d99395590aac83137a853eb73fbd64736f6c63430008180033",
  "deployedSourceMap": "56:135:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;108:81;151:7;176:6;108:81;;160:25:1;;;148:2;133:18;108:81:0;;;;;;",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    56,
    191
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB63D343F EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 SWAP14 0xD SHL 0xC NOT CREATE PUSH30 0xBCC8A8802ED490621F46D99395590AAC83137A853EB73FBD64736F6C6343 STOP ADDMOD XOR STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        56,
        191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "10": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "DUP1",
      "path": "0"
    },
    "14": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "REVERT",
      "path": "0"
    },
    "15": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "POP",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "19": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "LT",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x28"
    },
    "23": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "24": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "26": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "27": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "29": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "SHR",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB63D343F"
    },
    "36": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2D"
    },
    "39": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "40": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "43": {
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "first_revert": true,
      "fn": null,
      "offset": [
        56,
        191
      ],
      "op": "REVERT",
      "path": "0"
    },
    "45": {
      "fn": "TestContract.readNumber",
      "offset": [
        108,
        189
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "46": {
      "fn": "TestContract.readNumber",
      "offset": [
        151,
        158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "48": {
      "fn": "TestContract.readNumber",
      "offset": [
        176,
        182
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "49": {
      "fn": "TestContract.readNumber",
      "offset": [
        108,
        189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "51": {
      "fn": "TestContract.readNumber",
      "offset": [
        108,
        189
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "52": {
      "op": "SWAP1"
    },
    "53": {
      "op": "DUP2"
    },
    "54": {
      "op": "MSTORE"
    },
    "55": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "57": {
      "op": "ADD"
    },
    "58": {
      "fn": "TestContract.readNumber",
      "offset": [
        108,
        189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "60": {
      "fn": "TestContract.readNumber",
      "offset": [
        108,
        189
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "61": {
      "fn": "TestContract.readNumber",
      "offset": [
        108,
        189
      ],
      "op": "DUP1",
      "path": "0"
    },
    "62": {
      "fn": "TestContract.readNumber",
      "offset": [
        108,
        189
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "63": {
      "fn": "TestContract.readNumber",
      "offset": [
        108,
        189
      ],
      "op": "SUB",
      "path": "0"
    },
    "64": {
      "fn": "TestContract.readNumber",
      "offset": [
        108,
        189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "65": {
      "fn": "TestContract.readNumber",
      "offset": [
        108,
        189
      ],
      "op": "RETURN",
      "path": "0"
    }
  },
  "sha1": "207dfc92171ea40f59d18575763ce777814301e5",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract TestContract{\n    uint256 number = 7;\n\n    function readNumber() public view returns (uint256){\n        return number;\n    }\n}",
  "sourceMap": "56:135:0:-:0;;;100:1;83:18;;56:135;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/testit.sol",
  "type": "contract"
}