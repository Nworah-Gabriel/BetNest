{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Recieved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "source",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAdress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "CreditUser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAdress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DebitUser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet_address",
          "type": "address"
        }
      ],
      "name": "getBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "sendEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "reciever",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/transact.sol"
  },
  "ast": {
    "absolutePath": "contracts/transact.sol",
    "exportedSymbols": {
      "BetNestContract": [
        219
      ],
      "IERC20": [
        11
      ]
    },
    "id": 220,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:24:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC20",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 11,
        "linearizedBaseContracts": [
          11
        ],
        "name": "IERC20",
        "nameLocation": "93:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "a9059cbb",
            "id": 10,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "111:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "mutability": "mutable",
                  "name": "transfer",
                  "nameLocation": "128:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "120:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "120:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "143:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "138:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "138:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "119:31:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "169:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "169:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "168:6:0"
            },
            "scope": 11,
            "src": "102:73:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 220,
        "src": "83:95:0",
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "BetNestContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 219,
        "linearizedBaseContracts": [
          219
        ],
        "name": "BetNestContract",
        "nameLocation": "190:15:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 19,
              "nodeType": "Block",
              "src": "235:35:0",
              "statements": [
                {
                  "expression": {
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "245:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 15,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "253:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 16,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "257:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "253:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "245:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 18,
                  "nodeType": "ExpressionStatement",
                  "src": "245:18:0"
                }
              ]
            },
            "id": 20,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "224:2:0"
            },
            "returnParameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "235:0:0"
            },
            "scope": 219,
            "src": "212:58:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 22,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "284:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 219,
            "src": "276:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 21,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "276:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "27e235e3",
            "id": 26,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "330:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 219,
            "src": "295:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 25,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 23,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "303:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "295:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 24,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "314:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c",
            "id": 32,
            "name": "Deposit",
            "nameLocation": "364:7:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "depositor",
                  "nameLocation": "388:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "372:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "372:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "407:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "399:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "399:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "371:43:0"
            },
            "src": "358:57:0"
          },
          {
            "anonymous": false,
            "eventSelector": "69ca02dd4edd7bf0a4abb9ed3b7af3f14778db5d61921c7dc7cd545266326de2",
            "id": 38,
            "name": "Transfer",
            "nameLocation": "426:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "source",
                  "nameLocation": "451:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "435:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "435:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "464:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "459:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "434:37:0"
            },
            "src": "420:52:0"
          },
          {
            "anonymous": false,
            "eventSelector": "e03f2fbffd55aceaa08b8e27b348ae6b7607e8a520dfe6a92b053c2ce0ac850a",
            "id": 44,
            "name": "Recieved",
            "nameLocation": "483:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "492:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "492:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "501:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "501:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "491:18:0"
            },
            "src": "477:33:0"
          },
          {
            "body": {
              "id": 81,
              "nodeType": "Block",
              "src": "548:293:0",
              "statements": [
                {
                  "expression": {
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 47,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "558:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 50,
                      "indexExpression": {
                        "expression": {
                          "id": 48,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "567:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "571:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "567:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "558:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 51,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "582:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "586:5:0",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "582:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "558:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "558:33:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 63,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "671:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "675:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "671:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "307834373641356361364533664139423234314641663138346431314364363335413131353463614439",
                                "id": 59,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "617:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "value": "0x476A5ca6E3fA9B241FAf184d11Cd635A1154caD9"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 58,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "609:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 57,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "609:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 60,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "609:51:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "601:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 55,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "601:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "601:60:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "662:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "601:69:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "601:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "601:80:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 68,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "767:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "771:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "767:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 70,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "779:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "783:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "779:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 67,
                      "name": "Recieved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "758:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "758:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "EmitStatement",
                  "src": "753:36:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 75,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "812:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "816:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "812:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 77,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "824:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "828:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "824:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "804:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "804:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80,
                  "nodeType": "EmitStatement",
                  "src": "799:35:0"
                }
              ]
            },
            "id": 82,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "528:2:0"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "548:0:0"
            },
            "scope": 219,
            "src": "521:320:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 118,
              "nodeType": "Block",
              "src": "997:219:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 94,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1032:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BetNestContract_$219",
                                  "typeString": "contract BetNestContract"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BetNestContract_$219",
                                  "typeString": "contract BetNestContract"
                                }
                              ],
                              "id": 93,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1024:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 92,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1024:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 95,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1024:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1038:7:0",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1024:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 97,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84,
                          "src": "1049:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1024:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e73756666696369656e742066756e6473",
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1057:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5",
                          "typeString": "literal_string \"insufficient funds\""
                        },
                        "value": "insufficient funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5",
                          "typeString": "literal_string \"insufficient funds\""
                        }
                      ],
                      "id": 91,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1016:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1016:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "1016:62:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 108,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "1155:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 104,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1134:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1138:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1134:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1126:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 102,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1126:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1126:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1146:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1126:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1126:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "1126:36:0"
                },
                {
                  "assignments": [
                    112
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 112,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "1177:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 118,
                      "src": "1172:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 111,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1172:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 114,
                  "initialValue": {
                    "hexValue": "74727565",
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1183:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1172:15:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 115,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "1205:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 116,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1204:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 90,
                  "id": 117,
                  "nodeType": "Return",
                  "src": "1197:12:0"
                }
              ]
            },
            "functionSelector": "00f714ce",
            "id": 119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "918:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "935:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "927:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "reciever",
                  "nameLocation": "959:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "943:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "943:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "926:42:0"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "992:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "992:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "991:6:0"
            },
            "scope": 219,
            "src": "909:307:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 138,
              "nodeType": "Block",
              "src": "1278:201:0",
              "statements": [
                {
                  "assignments": [
                    125
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 125,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "1334:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 138,
                      "src": "1326:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 124,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1326:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 131,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 128,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "1352:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BetNestContract_$219",
                            "typeString": "contract BetNestContract"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BetNestContract_$219",
                            "typeString": "contract BetNestContract"
                          }
                        ],
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1344:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 126,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1344:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1344:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1358:7:0",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "1344:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1326:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "1464:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 132,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "1444:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1455:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1444:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1444:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "1444:28:0"
                }
              ]
            },
            "functionSelector": "48c981e2",
            "id": 139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendEther",
            "nameLocation": "1231:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "1257:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "1241:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1241:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1240:28:0"
            },
            "returnParameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1278:0:0"
            },
            "scope": 219,
            "src": "1222:257:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "1615:48:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 146,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "1632:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 148,
                    "indexExpression": {
                      "id": 147,
                      "name": "wallet_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1641:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1632:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 145,
                  "id": 149,
                  "nodeType": "Return",
                  "src": "1625:31:0"
                }
              ]
            },
            "functionSelector": "c84aae17",
            "id": 151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalances",
            "nameLocation": "1549:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "wallet_address",
                  "nameLocation": "1569:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1561:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1561:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1560:24:0"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1606:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1606:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1605:9:0"
            },
            "scope": 219,
            "src": "1540:123:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "1775:45:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 158,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "1800:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BetNestContract_$219",
                            "typeString": "contract BetNestContract"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BetNestContract_$219",
                            "typeString": "contract BetNestContract"
                          }
                        ],
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1792:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 156,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1792:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1792:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1806:7:0",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "1792:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 155,
                  "id": 161,
                  "nodeType": "Return",
                  "src": "1785:28:0"
                }
              ]
            },
            "functionSelector": "6f9fb98a",
            "id": 163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractBalance",
            "nameLocation": "1724:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1742:2:0"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "1766:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1766:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1765:9:0"
            },
            "scope": 219,
            "src": "1715:105:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 189,
              "nodeType": "Block",
              "src": "1946:139:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 173,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "1964:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 175,
                          "indexExpression": {
                            "id": 174,
                            "name": "userAdress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "1973:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1964:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 176,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "1988:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1964:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e73756666696369656e742066756e6473",
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1996:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5",
                          "typeString": "literal_string \"insufficient funds\""
                        },
                        "value": "insufficient funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5",
                          "typeString": "literal_string \"insufficient funds\""
                        }
                      ],
                      "id": 172,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1956:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1956:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "1956:61:0"
                },
                {
                  "expression": {
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 181,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "2027:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 183,
                      "indexExpression": {
                        "id": 182,
                        "name": "userAdress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "2036:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2027:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 184,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "2051:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2027:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "2027:30:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2074:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 171,
                  "id": 188,
                  "nodeType": "Return",
                  "src": "2067:11:0"
                }
              ]
            },
            "functionSelector": "c67b909f",
            "id": 190,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "DebitUser",
            "nameLocation": "1881:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "userAdress",
                  "nameLocation": "1899:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "1891:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1891:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1916:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "1911:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1911:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1890:33:0"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "1940:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1940:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1939:6:0"
            },
            "scope": 219,
            "src": "1872:213:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 207,
              "nodeType": "Block",
              "src": "2166:142:0",
              "statements": [
                {
                  "expression": {
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 199,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "2250:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 201,
                      "indexExpression": {
                        "id": 200,
                        "name": "userAdress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "2259:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2250:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 202,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 194,
                      "src": "2274:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2250:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "2250:30:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2297:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 198,
                  "id": 206,
                  "nodeType": "Return",
                  "src": "2290:11:0"
                }
              ]
            },
            "functionSelector": "a1e5b642",
            "id": 208,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "CreditUser",
            "nameLocation": "2100:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "userAdress",
                  "nameLocation": "2119:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 208,
                  "src": "2111:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2111:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2136:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 208,
                  "src": "2131:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2131:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2110:33:0"
            },
            "returnParameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 208,
                  "src": "2160:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2160:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2159:6:0"
            },
            "scope": 219,
            "src": "2091:217:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 217,
              "nodeType": "Block",
              "src": "2363:36:0",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 213,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2381:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2385:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2381:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 215,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2380:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 212,
                  "id": 216,
                  "nodeType": "Return",
                  "src": "2373:19:0"
                }
              ]
            },
            "functionSelector": "5e01eb5a",
            "id": 218,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSender",
            "nameLocation": "2323:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2332:2:0"
            },
            "returnParameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "2355:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2355:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2354:9:0"
            },
            "scope": 219,
            "src": "2314:85:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 220,
        "src": "181:2220:0",
        "usedErrors": [],
        "usedEvents": [
          32,
          38,
          44
        ]
      }
    ],
    "src": "31:2370:0"
  },
  "bytecode": "6080604052600080546001600160a01b0319163317905561050e806100256000396000f3fe60806040526004361061007e5760003560e01c80636f9fb98a1161004e5780636f9fb98a146101fc578063a1e5b6421461020f578063c67b909f1461022f578063c84aae171461024f57600080fd5b8062f714ce1461015c57806327e235e31461018457806348c981e2146101bf5780635e01eb5a146101e157600080fd5b366101575733600090815260016020526040812080543492906100a290849061041a565b909155505060405173476a5ca6e3fa9b241faf184d11cd635a1154cad9903480156108fc02916000818181858888f193505050501580156100e7573d6000803e3d6000fd5b50604080513381523460208201527fe03f2fbffd55aceaa08b8e27b348ae6b7607e8a520dfe6a92b053c2ce0ac850a910160405180910390a160405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2005b600080fd5b61016f61016a366004610445565b610285565b60405190151581526020015b60405180910390f35b34801561019057600080fd5b506101b161019f366004610475565b60016020526000908152604090205481565b60405190815260200161017b565b3480156101cb57600080fd5b506101df6101da366004610475565b61030a565b005b3480156101ed57600080fd5b5060405133815260200161017b565b34801561020857600080fd5b50476101b1565b34801561021b57600080fd5b5061016f61022a366004610499565b610347565b34801561023b57600080fd5b5061016f61024a366004610499565b61037f565b34801561025b57600080fd5b506101b161026a366004610475565b6001600160a01b031660009081526001602052604090205490565b6000824710156102d15760405162461bcd60e51b8152602060048201526012602482015271696e73756666696369656e742066756e647360701b60448201526064015b60405180910390fd5b604051339084156108fc029085906000818181858888f193505050501580156102fe573d6000803e3d6000fd5b50600190505b92915050565b60405147906001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610342573d6000803e3d6000fd5b505050565b6001600160a01b03821660009081526001602052604081208054839190839061037190849061041a565b909155506001949350505050565b6001600160a01b0382166000908152600160205260408120548211156103dc5760405162461bcd60e51b8152602060048201526012602482015271696e73756666696369656e742066756e647360701b60448201526064016102c8565b6001600160a01b038316600090815260016020526040812080548492906103719084906104c5565b634e487b7160e01b600052601160045260246000fd5b8082018082111561030457610304610404565b6001600160a01b038116811461044257600080fd5b50565b6000806040838503121561045857600080fd5b82359150602083013561046a8161042d565b809150509250929050565b60006020828403121561048757600080fd5b81356104928161042d565b9392505050565b600080604083850312156104ac57600080fd5b82356104b78161042d565b946020939093013593505050565b818103818111156103045761030461040456fea2646970667358221220d05064801b2c83a4f90b66d0ebb75a06212a1e71035e068004bfd66a879d77a764736f6c63430008180033",
  "bytecodeSha1": "578d85f829fd7b4c4891b7b0415f19bd320a4130",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.24+commit.e11b9ed9"
  },
  "contractName": "BetNestContract",
  "coverageMap": {
    "branches": {
      "0": {
        "BetNestContract.DebitUser": {
          "15": [
            1964,
            1994,
            true
          ]
        },
        "BetNestContract.withdraw": {
          "14": [
            1024,
            1055,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "BetNestContract.<receive>": {
          "0": [
            558,
            591
          ],
          "1": [
            601,
            681
          ],
          "2": [
            753,
            789
          ],
          "3": [
            799,
            834
          ]
        },
        "BetNestContract.CreditUser": {
          "10": [
            2250,
            2280
          ],
          "11": [
            2290,
            2301
          ]
        },
        "BetNestContract.DebitUser": {
          "12": [
            1956,
            2017
          ],
          "13": [
            2027,
            2057
          ]
        },
        "BetNestContract.getBalances": {
          "6": [
            1625,
            1656
          ]
        },
        "BetNestContract.getContractBalance": {
          "5": [
            1785,
            1813
          ]
        },
        "BetNestContract.getSender": {
          "4": [
            2373,
            2392
          ]
        },
        "BetNestContract.sendEther": {
          "9": [
            1444,
            1472
          ]
        },
        "BetNestContract.withdraw": {
          "7": [
            1016,
            1078
          ],
          "8": [
            1126,
            1162
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "60806040526004361061007e5760003560e01c80636f9fb98a1161004e5780636f9fb98a146101fc578063a1e5b6421461020f578063c67b909f1461022f578063c84aae171461024f57600080fd5b8062f714ce1461015c57806327e235e31461018457806348c981e2146101bf5780635e01eb5a146101e157600080fd5b366101575733600090815260016020526040812080543492906100a290849061041a565b909155505060405173476a5ca6e3fa9b241faf184d11cd635a1154cad9903480156108fc02916000818181858888f193505050501580156100e7573d6000803e3d6000fd5b50604080513381523460208201527fe03f2fbffd55aceaa08b8e27b348ae6b7607e8a520dfe6a92b053c2ce0ac850a910160405180910390a160405134815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2005b600080fd5b61016f61016a366004610445565b610285565b60405190151581526020015b60405180910390f35b34801561019057600080fd5b506101b161019f366004610475565b60016020526000908152604090205481565b60405190815260200161017b565b3480156101cb57600080fd5b506101df6101da366004610475565b61030a565b005b3480156101ed57600080fd5b5060405133815260200161017b565b34801561020857600080fd5b50476101b1565b34801561021b57600080fd5b5061016f61022a366004610499565b610347565b34801561023b57600080fd5b5061016f61024a366004610499565b61037f565b34801561025b57600080fd5b506101b161026a366004610475565b6001600160a01b031660009081526001602052604090205490565b6000824710156102d15760405162461bcd60e51b8152602060048201526012602482015271696e73756666696369656e742066756e647360701b60448201526064015b60405180910390fd5b604051339084156108fc029085906000818181858888f193505050501580156102fe573d6000803e3d6000fd5b50600190505b92915050565b60405147906001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610342573d6000803e3d6000fd5b505050565b6001600160a01b03821660009081526001602052604081208054839190839061037190849061041a565b909155506001949350505050565b6001600160a01b0382166000908152600160205260408120548211156103dc5760405162461bcd60e51b8152602060048201526012602482015271696e73756666696369656e742066756e647360701b60448201526064016102c8565b6001600160a01b038316600090815260016020526040812080548492906103719084906104c5565b634e487b7160e01b600052601160045260246000fd5b8082018082111561030457610304610404565b6001600160a01b038116811461044257600080fd5b50565b6000806040838503121561045857600080fd5b82359150602083013561046a8161042d565b809150509250929050565b60006020828403121561048757600080fd5b81356104928161042d565b9392505050565b600080604083850312156104ac57600080fd5b82356104b78161042d565b946020939093013593505050565b818103818111156103045761030461040456fea2646970667358221220d05064801b2c83a4f90b66d0ebb75a06212a1e71035e068004bfd66a879d77a764736f6c63430008180033",
  "deployedSourceMap": "181:2220:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;567:10;558:20;;;;:8;:20;;;;;:33;;582:9;;558:20;:33;;582:9;;558:33;:::i;:::-;;;;-1:-1:-1;;601:80:0;;617:42;;671:9;601:80;;;;;;;;;671:9;617:42;601:80;;;;;;;;;;;;;;;;;;;;-1:-1:-1;758:31:0;;;767:10;450:51:1;;779:9:0;532:2:1;517:18;;510:34;758:31:0;;423:18:1;758:31:0;;;;;;;804:30;;824:9;701:25:1;;812:10:0;;804:30;;689:2:1;674:18;804:30:0;;;;;;;181:2220;;;;;909:307;;;;;;:::i;:::-;;:::i;:::-;;;1382:14:1;;1375:22;1357:41;;1345:2;1330:18;909:307:0;;;;;;;;295:43;;;;;;;;;;-1:-1:-1;295:43:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;701:25:1;;;689:2;674:18;295:43:0;555:177:1;1222:257:0;;;;;;;;;;-1:-1:-1;1222:257:0;;;;;:::i;:::-;;:::i;:::-;;2314:85;;;;;;;;;;-1:-1:-1;2314:85:0;;2381:10;2083:51:1;;2071:2;2056:18;2314:85:0;1937:203:1;1715:105:0;;;;;;;;;;-1:-1:-1;1792:21:0;1715:105;;2091:217;;;;;;;;;;-1:-1:-1;2091:217:0;;;;;:::i;:::-;;:::i;1872:213::-;;;;;;;;;;-1:-1:-1;1872:213:0;;;;;:::i;:::-;;:::i;1540:123::-;;;;;;;;;;-1:-1:-1;1540:123:0;;;;;:::i;:::-;-1:-1:-1;;;;;1632:24:0;1606:7;1632:24;;;:8;:24;;;;;;;1540:123;909:307;992:4;1049:6;1024:21;:31;;1016:62;;;;-1:-1:-1;;;1016:62:0;;2675:2:1;1016:62:0;;;2657:21:1;2714:2;2694:18;;;2687:30;-1:-1:-1;;;2733:18:1;;;2726:48;2791:18;;1016:62:0;;;;;;;;;1126:36;;1134:10;;1126:36;;;;;1155:6;;1126:36;;;;1155:6;1134:10;1126:36;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1183:4:0;;-1:-1:-1;909:307:0;;;;;:::o;1222:257::-;1444:28;;1344:21;;-1:-1:-1;;;;;1444:19:0;;;:28;;;;;1344:21;;1326:15;1444:28;1326:15;1444:28;1344:21;1444:19;:28;;;;;;;;;;;;;;;;;;;;;1278:201;1222:257;:::o;2091:217::-;-1:-1:-1;;;;;2250:20:0;;2160:4;2250:20;;;:8;:20;;;;;:30;;2274:6;;2250:20;2160:4;;2250:30;;2274:6;;2250:30;:::i;:::-;;;;-1:-1:-1;2297:4:0;;2091:217;-1:-1:-1;;;;2091:217:0:o;1872:213::-;-1:-1:-1;;;;;1964:20:0;;1940:4;1964:20;;;:8;:20;;;;;;:30;-1:-1:-1;1964:30:0;1956:61;;;;-1:-1:-1;;;1956:61:0;;2675:2:1;1956:61:0;;;2657:21:1;2714:2;2694:18;;;2687:30;-1:-1:-1;;;2733:18:1;;;2726:48;2791:18;;1956:61:0;2473:342:1;1956:61:0;-1:-1:-1;;;;;2027:20:0;;;;;;:8;:20;;;;;:30;;2051:6;;2027:20;:30;;2051:6;;2027:30;:::i;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:125;211:9;;;232:10;;;229:36;;;245:18;;:::i;737:139::-;-1:-1:-1;;;;;820:31:1;;810:42;;800:70;;866:1;863;856:12;800:70;737:139;:::o;881:331::-;957:6;965;1018:2;1006:9;997:7;993:23;989:32;986:52;;;1034:1;1031;1024:12;986:52;1070:9;1057:23;1047:33;;1130:2;1119:9;1115:18;1102:32;1143:39;1176:5;1143:39;:::i;:::-;1201:5;1191:15;;;881:331;;;;;:::o;1409:255::-;1468:6;1521:2;1509:9;1500:7;1496:23;1492:32;1489:52;;;1537:1;1534;1527:12;1489:52;1576:9;1563:23;1595:39;1628:5;1595:39;:::i;:::-;1653:5;1409:255;-1:-1:-1;;;1409:255:1:o;2145:323::-;2213:6;2221;2274:2;2262:9;2253:7;2249:23;2245:32;2242:52;;;2290:1;2287;2280:12;2242:52;2329:9;2316:23;2348:39;2381:5;2348:39;:::i;:::-;2406:5;2458:2;2443:18;;;;2430:32;;-1:-1:-1;;;2145:323:1:o;2820:128::-;2887:9;;;2908:11;;;2905:37;;;2922:18;;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    181,
    2401
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F9FB98A GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xA1E5B642 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xC67B909F EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xC84AAE17 EQ PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xF714CE EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x48C981E2 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x5E01EB5A EQ PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x157 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0xA2 SWAP1 DUP5 SWAP1 PUSH2 0x41A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH20 0x476A5CA6E3FA9B241FAF184D11CD635A1154CAD9 SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xE03F2FBFFD55ACEAA08B8E27B348AE6B7607E8A520DFE6A92B053C2CE0AC850A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16F PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0x445 JUMP JUMPDEST PUSH2 0x285 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B1 PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x475 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x475 JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SELFBALANCE PUSH2 0x1B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0x24A CALLDATASIZE PUSH1 0x4 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x37F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B1 PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0x475 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x696E73756666696369656E742066756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD SELFBALANCE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x342 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP2 SWAP1 DUP4 SWAP1 PUSH2 0x371 SWAP1 DUP5 SWAP1 PUSH2 0x41A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x696E73756666696369656E742066756E6473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x371 SWAP1 DUP5 SWAP1 PUSH2 0x4C5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x304 JUMPI PUSH2 0x304 PUSH2 0x404 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x46A DUP2 PUSH2 0x42D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x492 DUP2 PUSH2 0x42D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4B7 DUP2 PUSH2 0x42D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x304 JUMPI PUSH2 0x304 PUSH2 0x404 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 POP PUSH5 0x801B2C83A4 0xF9 SIGNEXTEND PUSH7 0xD0EBB75A06212A 0x1E PUSH18 0x35E068004BFD66A879D77A764736F6C6343 STOP ADDMOD XOR STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        181,
        2401
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E"
    },
    "12": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6F9FB98A"
    },
    "25": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E"
    },
    "29": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6F9FB98A"
    },
    "36": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FC"
    },
    "40": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA1E5B642"
    },
    "47": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20F"
    },
    "51": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC67B909F"
    },
    "58": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22F"
    },
    "62": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC84AAE17"
    },
    "69": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24F"
    },
    "73": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "76": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "REVERT",
      "path": "0"
    },
    "78": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "79": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "DUP1",
      "path": "0"
    },
    "80": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xF714CE"
    },
    "84": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "EQ",
      "path": "0"
    },
    "85": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15C"
    },
    "88": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "89": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "DUP1",
      "path": "0"
    },
    "90": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x27E235E3"
    },
    "95": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "EQ",
      "path": "0"
    },
    "96": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184"
    },
    "99": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "100": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x48C981E2"
    },
    "106": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "EQ",
      "path": "0"
    },
    "107": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BF"
    },
    "110": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "111": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "DUP1",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5E01EB5A"
    },
    "117": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "EQ",
      "path": "0"
    },
    "118": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E1"
    },
    "121": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "122": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "124": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "DUP1",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "REVERT",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "127": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "128": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x157"
    },
    "131": {
      "fn": null,
      "offset": [
        181,
        2401
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "132": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        567,
        577
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 0
    },
    "133": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        558,
        578
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "135": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        558,
        578
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "136": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        558,
        578
      ],
      "op": "DUP2",
      "path": "0"
    },
    "137": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        558,
        578
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "138": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        558,
        566
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "140": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        558,
        578
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "142": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        558,
        578
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "143": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        558,
        578
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "145": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        558,
        578
      ],
      "op": "DUP2",
      "path": "0"
    },
    "146": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        558,
        578
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "147": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        558,
        591
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        558,
        591
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "149": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        582,
        591
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "150": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        582,
        591
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "151": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        558,
        578
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "152": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        558,
        591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA2"
    },
    "155": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        558,
        591
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "156": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        582,
        591
      ],
      "op": "DUP5",
      "path": "0"
    },
    "157": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        582,
        591
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "158": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        558,
        591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41A"
    },
    "161": {
      "fn": "BetNestContract.<receive>",
      "jump": "i",
      "offset": [
        558,
        591
      ],
      "op": "JUMP",
      "path": "0"
    },
    "162": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        558,
        591
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "163": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        558,
        591
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "164": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        558,
        591
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "165": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        558,
        591
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "166": {
      "op": "POP"
    },
    "167": {
      "op": "POP"
    },
    "168": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x40"
    },
    "170": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "171": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        617,
        659
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0x476A5CA6E3FA9B241FAF184D11CD635A1154CAD9"
    },
    "192": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        617,
        659
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "193": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        671,
        680
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "194": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "DUP1",
      "path": "0"
    },
    "195": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "196": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "199": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "MUL",
      "path": "0"
    },
    "200": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "201": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "203": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "DUP2",
      "path": "0"
    },
    "204": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "DUP2",
      "path": "0"
    },
    "205": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "DUP2",
      "path": "0"
    },
    "206": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        671,
        680
      ],
      "op": "DUP6",
      "path": "0"
    },
    "207": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        617,
        659
      ],
      "op": "DUP9",
      "path": "0"
    },
    "208": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "DUP9",
      "path": "0"
    },
    "209": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "CALL",
      "path": "0"
    },
    "210": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "211": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "POP",
      "path": "0"
    },
    "212": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "POP",
      "path": "0"
    },
    "213": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "POP",
      "path": "0"
    },
    "214": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "POP",
      "path": "0"
    },
    "215": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "216": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "DUP1",
      "path": "0"
    },
    "217": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "218": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7"
    },
    "221": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "222": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "223": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "225": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "DUP1",
      "path": "0"
    },
    "226": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "227": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "228": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "230": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "REVERT",
      "path": "0"
    },
    "231": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        601,
        681
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "232": {
      "op": "POP"
    },
    "233": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        758,
        789
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x40"
    },
    "235": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        758,
        789
      ],
      "op": "DUP1",
      "path": "0"
    },
    "236": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        758,
        789
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "237": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        767,
        777
      ],
      "op": "CALLER",
      "path": "0"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        779,
        788
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "241": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "243": {
      "op": "DUP3"
    },
    "244": {
      "op": "ADD"
    },
    "245": {
      "op": "MSTORE"
    },
    "246": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        758,
        789
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xE03F2FBFFD55ACEAA08B8E27B348AE6B7607E8A520DFE6A92B053C2CE0AC850A"
    },
    "279": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        758,
        789
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "280": {
      "op": "ADD"
    },
    "281": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        758,
        789
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "283": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        758,
        789
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "284": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        758,
        789
      ],
      "op": "DUP1",
      "path": "0"
    },
    "285": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        758,
        789
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "286": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        758,
        789
      ],
      "op": "SUB",
      "path": "0"
    },
    "287": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        758,
        789
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "288": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        758,
        789
      ],
      "op": "LOG1",
      "path": "0"
    },
    "289": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        804,
        834
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x40"
    },
    "291": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        804,
        834
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "292": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        824,
        833
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "293": {
      "op": "DUP2"
    },
    "294": {
      "op": "MSTORE"
    },
    "295": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        812,
        822
      ],
      "op": "CALLER",
      "path": "0"
    },
    "296": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        812,
        822
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "297": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        804,
        834
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
    },
    "330": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        804,
        834
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "333": {
      "op": "ADD"
    },
    "334": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        804,
        834
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "336": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        804,
        834
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "337": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        804,
        834
      ],
      "op": "DUP1",
      "path": "0"
    },
    "338": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        804,
        834
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "339": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        804,
        834
      ],
      "op": "SUB",
      "path": "0"
    },
    "340": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        804,
        834
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "341": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        804,
        834
      ],
      "op": "LOG2",
      "path": "0"
    },
    "342": {
      "offset": [
        181,
        2401
      ],
      "op": "STOP",
      "path": "0"
    },
    "343": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        181,
        2401
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "344": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        181,
        2401
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "346": {
      "fn": "BetNestContract.<receive>",
      "offset": [
        181,
        2401
      ],
      "op": "DUP1",
      "path": "0"
    },
    "347": {
      "first_revert": true,
      "fn": "BetNestContract.<receive>",
      "offset": [
        181,
        2401
      ],
      "op": "REVERT",
      "path": "0"
    },
    "348": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "349": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F"
    },
    "352": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16A"
    },
    "355": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "356": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "358": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x445"
    },
    "361": {
      "fn": "BetNestContract.withdraw",
      "jump": "i",
      "offset": [
        909,
        1216
      ],
      "op": "JUMP",
      "path": "0"
    },
    "362": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "363": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x285"
    },
    "366": {
      "fn": "BetNestContract.withdraw",
      "jump": "i",
      "offset": [
        909,
        1216
      ],
      "op": "JUMP",
      "path": "0"
    },
    "367": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "368": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "370": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "371": {
      "op": "SWAP1"
    },
    "372": {
      "op": "ISZERO"
    },
    "373": {
      "op": "ISZERO"
    },
    "374": {
      "op": "DUP2"
    },
    "375": {
      "op": "MSTORE"
    },
    "376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "378": {
      "op": "ADD"
    },
    "379": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "380": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "382": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "383": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "DUP1",
      "path": "0"
    },
    "384": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "385": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "SUB",
      "path": "0"
    },
    "386": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "387": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "RETURN",
      "path": "0"
    },
    "388": {
      "offset": [
        295,
        338
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "389": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "390": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "DUP1",
      "path": "0"
    },
    "391": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "392": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x190"
    },
    "395": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "396": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "398": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "DUP1",
      "path": "0"
    },
    "399": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "REVERT",
      "path": "0"
    },
    "400": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "401": {
      "op": "POP"
    },
    "402": {
      "offset": [
        295,
        338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B1"
    },
    "405": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19F"
    },
    "408": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "409": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "411": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x475"
    },
    "414": {
      "fn": "BetNestContract.withdraw",
      "jump": "i",
      "offset": [
        295,
        338
      ],
      "op": "JUMP",
      "path": "0"
    },
    "415": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "416": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "418": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "420": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "421": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "423": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "424": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "DUP2",
      "path": "0"
    },
    "425": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "426": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "428": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "429": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "430": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "431": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "DUP2",
      "path": "0"
    },
    "432": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "JUMP",
      "path": "0"
    },
    "433": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "434": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "436": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        295,
        338
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "437": {
      "op": "SWAP1"
    },
    "438": {
      "op": "DUP2"
    },
    "439": {
      "op": "MSTORE"
    },
    "440": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "442": {
      "op": "ADD"
    },
    "443": {
      "offset": [
        295,
        338
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17B"
    },
    "446": {
      "op": "JUMP"
    },
    "447": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1222,
        1479
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "448": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1222,
        1479
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "449": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1222,
        1479
      ],
      "op": "DUP1",
      "path": "0"
    },
    "450": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1222,
        1479
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "451": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1222,
        1479
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CB"
    },
    "454": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1222,
        1479
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "455": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1222,
        1479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "457": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1222,
        1479
      ],
      "op": "DUP1",
      "path": "0"
    },
    "458": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1222,
        1479
      ],
      "op": "REVERT",
      "path": "0"
    },
    "459": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1222,
        1479
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "460": {
      "op": "POP"
    },
    "461": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1222,
        1479
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DF"
    },
    "464": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1222,
        1479
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DA"
    },
    "467": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1222,
        1479
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "468": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1222,
        1479
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "470": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1222,
        1479
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x475"
    },
    "473": {
      "fn": "BetNestContract.sendEther",
      "jump": "i",
      "offset": [
        1222,
        1479
      ],
      "op": "JUMP",
      "path": "0"
    },
    "474": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1222,
        1479
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "475": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1222,
        1479
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30A"
    },
    "478": {
      "fn": "BetNestContract.sendEther",
      "jump": "i",
      "offset": [
        1222,
        1479
      ],
      "op": "JUMP",
      "path": "0"
    },
    "479": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1222,
        1479
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "480": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1222,
        1479
      ],
      "op": "STOP",
      "path": "0"
    },
    "481": {
      "fn": "BetNestContract.getSender",
      "offset": [
        2314,
        2399
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "482": {
      "fn": "BetNestContract.getSender",
      "offset": [
        2314,
        2399
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "483": {
      "fn": "BetNestContract.getSender",
      "offset": [
        2314,
        2399
      ],
      "op": "DUP1",
      "path": "0"
    },
    "484": {
      "fn": "BetNestContract.getSender",
      "offset": [
        2314,
        2399
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "485": {
      "fn": "BetNestContract.getSender",
      "offset": [
        2314,
        2399
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1ED"
    },
    "488": {
      "fn": "BetNestContract.getSender",
      "offset": [
        2314,
        2399
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "489": {
      "fn": "BetNestContract.getSender",
      "offset": [
        2314,
        2399
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "491": {
      "fn": "BetNestContract.getSender",
      "offset": [
        2314,
        2399
      ],
      "op": "DUP1",
      "path": "0"
    },
    "492": {
      "fn": "BetNestContract.getSender",
      "offset": [
        2314,
        2399
      ],
      "op": "REVERT",
      "path": "0"
    },
    "493": {
      "fn": "BetNestContract.getSender",
      "offset": [
        2314,
        2399
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "494": {
      "op": "POP"
    },
    "495": {
      "fn": "BetNestContract.getSender",
      "offset": [
        2314,
        2399
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "497": {
      "fn": "BetNestContract.getSender",
      "offset": [
        2314,
        2399
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "498": {
      "fn": "BetNestContract.getSender",
      "offset": [
        2381,
        2391
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 4
    },
    "499": {
      "op": "DUP2"
    },
    "500": {
      "op": "MSTORE"
    },
    "501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "503": {
      "op": "ADD"
    },
    "504": {
      "fn": "BetNestContract.getSender",
      "offset": [
        2314,
        2399
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17B"
    },
    "507": {
      "op": "JUMP"
    },
    "508": {
      "fn": "BetNestContract.getContractBalance",
      "offset": [
        1715,
        1820
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "509": {
      "fn": "BetNestContract.getContractBalance",
      "offset": [
        1715,
        1820
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "510": {
      "fn": "BetNestContract.getContractBalance",
      "offset": [
        1715,
        1820
      ],
      "op": "DUP1",
      "path": "0"
    },
    "511": {
      "fn": "BetNestContract.getContractBalance",
      "offset": [
        1715,
        1820
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "512": {
      "fn": "BetNestContract.getContractBalance",
      "offset": [
        1715,
        1820
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x208"
    },
    "515": {
      "fn": "BetNestContract.getContractBalance",
      "offset": [
        1715,
        1820
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "516": {
      "fn": "BetNestContract.getContractBalance",
      "offset": [
        1715,
        1820
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "518": {
      "fn": "BetNestContract.getContractBalance",
      "offset": [
        1715,
        1820
      ],
      "op": "DUP1",
      "path": "0"
    },
    "519": {
      "fn": "BetNestContract.getContractBalance",
      "offset": [
        1715,
        1820
      ],
      "op": "REVERT",
      "path": "0"
    },
    "520": {
      "fn": "BetNestContract.getContractBalance",
      "offset": [
        1715,
        1820
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "521": {
      "op": "POP"
    },
    "522": {
      "fn": "BetNestContract.getContractBalance",
      "offset": [
        1792,
        1813
      ],
      "op": "SELFBALANCE",
      "path": "0",
      "statement": 5
    },
    "523": {
      "fn": "BetNestContract.getContractBalance",
      "offset": [
        1715,
        1820
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B1"
    },
    "526": {
      "fn": "BetNestContract.getContractBalance",
      "offset": [
        1715,
        1820
      ],
      "op": "JUMP",
      "path": "0"
    },
    "527": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2091,
        2308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "528": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2091,
        2308
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "529": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2091,
        2308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "530": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2091,
        2308
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "531": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2091,
        2308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21B"
    },
    "534": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2091,
        2308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "535": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2091,
        2308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "537": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2091,
        2308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "538": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2091,
        2308
      ],
      "op": "REVERT",
      "path": "0"
    },
    "539": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2091,
        2308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "540": {
      "op": "POP"
    },
    "541": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2091,
        2308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F"
    },
    "544": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2091,
        2308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22A"
    },
    "547": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2091,
        2308
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "548": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2091,
        2308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "550": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2091,
        2308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x499"
    },
    "553": {
      "fn": "BetNestContract.CreditUser",
      "jump": "i",
      "offset": [
        2091,
        2308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "554": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2091,
        2308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "555": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2091,
        2308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x347"
    },
    "558": {
      "fn": "BetNestContract.CreditUser",
      "jump": "i",
      "offset": [
        2091,
        2308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "559": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1872,
        2085
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "560": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1872,
        2085
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "561": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1872,
        2085
      ],
      "op": "DUP1",
      "path": "0"
    },
    "562": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1872,
        2085
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "563": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1872,
        2085
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23B"
    },
    "566": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1872,
        2085
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "567": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1872,
        2085
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "569": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1872,
        2085
      ],
      "op": "DUP1",
      "path": "0"
    },
    "570": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1872,
        2085
      ],
      "op": "REVERT",
      "path": "0"
    },
    "571": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1872,
        2085
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "572": {
      "op": "POP"
    },
    "573": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1872,
        2085
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F"
    },
    "576": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1872,
        2085
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24A"
    },
    "579": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1872,
        2085
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "580": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1872,
        2085
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "582": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1872,
        2085
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x499"
    },
    "585": {
      "fn": "BetNestContract.DebitUser",
      "jump": "i",
      "offset": [
        1872,
        2085
      ],
      "op": "JUMP",
      "path": "0"
    },
    "586": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1872,
        2085
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "587": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1872,
        2085
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37F"
    },
    "590": {
      "fn": "BetNestContract.DebitUser",
      "jump": "i",
      "offset": [
        1872,
        2085
      ],
      "op": "JUMP",
      "path": "0"
    },
    "591": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1540,
        1663
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "592": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1540,
        1663
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "593": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1540,
        1663
      ],
      "op": "DUP1",
      "path": "0"
    },
    "594": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1540,
        1663
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "595": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1540,
        1663
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25B"
    },
    "598": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1540,
        1663
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "599": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1540,
        1663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "601": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1540,
        1663
      ],
      "op": "DUP1",
      "path": "0"
    },
    "602": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1540,
        1663
      ],
      "op": "REVERT",
      "path": "0"
    },
    "603": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1540,
        1663
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "604": {
      "op": "POP"
    },
    "605": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1540,
        1663
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B1"
    },
    "608": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1540,
        1663
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26A"
    },
    "611": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1540,
        1663
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "612": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1540,
        1663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "614": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1540,
        1663
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x475"
    },
    "617": {
      "fn": "BetNestContract.getBalances",
      "jump": "i",
      "offset": [
        1540,
        1663
      ],
      "op": "JUMP",
      "path": "0"
    },
    "618": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1540,
        1663
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "625": {
      "op": "SHL"
    },
    "626": {
      "op": "SUB"
    },
    "627": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1632,
        1656
      ],
      "op": "AND",
      "path": "0",
      "statement": 6
    },
    "628": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1606,
        1613
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "630": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1632,
        1656
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "631": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1632,
        1656
      ],
      "op": "DUP2",
      "path": "0"
    },
    "632": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1632,
        1656
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "633": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1632,
        1640
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "635": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1632,
        1656
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "637": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1632,
        1656
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "638": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1632,
        1656
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "640": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1632,
        1656
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "641": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1632,
        1656
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "642": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1632,
        1656
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "643": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1632,
        1656
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "644": {
      "fn": "BetNestContract.getBalances",
      "offset": [
        1540,
        1663
      ],
      "op": "JUMP",
      "path": "0"
    },
    "645": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "646": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        992,
        996
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "648": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1049,
        1055
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 7
    },
    "649": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1024,
        1045
      ],
      "op": "SELFBALANCE",
      "path": "0"
    },
    "650": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1024,
        1055
      ],
      "op": "LT",
      "path": "0"
    },
    "651": {
      "branch": 14,
      "fn": "BetNestContract.withdraw",
      "offset": [
        1024,
        1055
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "652": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1016,
        1078
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D1"
    },
    "655": {
      "branch": 14,
      "fn": "BetNestContract.withdraw",
      "offset": [
        1016,
        1078
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "656": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1016,
        1078
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "658": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1016,
        1078
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "659": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "663": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "665": {
      "op": "SHL"
    },
    "666": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1016,
        1078
      ],
      "op": "DUP2",
      "path": "0"
    },
    "667": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1016,
        1078
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "668": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "670": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1016,
        1078
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "672": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1016,
        1078
      ],
      "op": "DUP3",
      "path": "0"
    },
    "673": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1016,
        1078
      ],
      "op": "ADD",
      "path": "0"
    },
    "674": {
      "op": "MSTORE"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "677": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "679": {
      "op": "DUP3"
    },
    "680": {
      "op": "ADD"
    },
    "681": {
      "op": "MSTORE"
    },
    "682": {
      "op": "PUSH18",
      "value": "0x696E73756666696369656E742066756E6473"
    },
    "701": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "703": {
      "op": "SHL"
    },
    "704": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "706": {
      "op": "DUP3"
    },
    "707": {
      "op": "ADD"
    },
    "708": {
      "op": "MSTORE"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "711": {
      "op": "ADD"
    },
    "712": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1016,
        1078
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "713": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1016,
        1078
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "715": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1016,
        1078
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "716": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1016,
        1078
      ],
      "op": "DUP1",
      "path": "0"
    },
    "717": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1016,
        1078
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "718": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1016,
        1078
      ],
      "op": "SUB",
      "path": "0"
    },
    "719": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1016,
        1078
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "720": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1016,
        1078
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "721": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1016,
        1078
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "722": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x40"
    },
    "724": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "725": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1134,
        1144
      ],
      "op": "CALLER",
      "path": "0"
    },
    "726": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1134,
        1144
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "727": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "DUP5",
      "path": "0"
    },
    "728": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "729": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "732": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "MUL",
      "path": "0"
    },
    "733": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "734": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1155,
        1161
      ],
      "op": "DUP6",
      "path": "0"
    },
    "735": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1155,
        1161
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "736": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "738": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "DUP2",
      "path": "0"
    },
    "739": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "DUP2",
      "path": "0"
    },
    "740": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "DUP2",
      "path": "0"
    },
    "741": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1155,
        1161
      ],
      "op": "DUP6",
      "path": "0"
    },
    "742": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1134,
        1144
      ],
      "op": "DUP9",
      "path": "0"
    },
    "743": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "DUP9",
      "path": "0"
    },
    "744": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "CALL",
      "path": "0"
    },
    "745": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "746": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "POP",
      "path": "0"
    },
    "747": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "POP",
      "path": "0"
    },
    "748": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "POP",
      "path": "0"
    },
    "749": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "POP",
      "path": "0"
    },
    "750": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "751": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "DUP1",
      "path": "0"
    },
    "752": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "753": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FE"
    },
    "756": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "757": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "758": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "760": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "DUP1",
      "path": "0"
    },
    "761": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "762": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "763": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "765": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "REVERT",
      "path": "0"
    },
    "766": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1126,
        1162
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "767": {
      "op": "POP"
    },
    "768": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1183,
        1187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "770": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        1183,
        1187
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "771": {
      "op": "POP"
    },
    "772": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "773": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "774": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "775": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "POP",
      "path": "0"
    },
    "776": {
      "fn": "BetNestContract.withdraw",
      "offset": [
        909,
        1216
      ],
      "op": "POP",
      "path": "0"
    },
    "777": {
      "fn": "BetNestContract.withdraw",
      "jump": "o",
      "offset": [
        909,
        1216
      ],
      "op": "JUMP",
      "path": "0"
    },
    "778": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1222,
        1479
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "779": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x40"
    },
    "781": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "782": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1344,
        1365
      ],
      "op": "SELFBALANCE",
      "path": "0"
    },
    "783": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1344,
        1365
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "790": {
      "op": "SHL"
    },
    "791": {
      "op": "SUB"
    },
    "792": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1463
      ],
      "op": "DUP4",
      "path": "0"
    },
    "793": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1463
      ],
      "op": "AND",
      "path": "0"
    },
    "794": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1463
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "795": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "DUP3",
      "path": "0"
    },
    "796": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "797": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "800": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "MUL",
      "path": "0"
    },
    "801": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "802": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1344,
        1365
      ],
      "op": "DUP4",
      "path": "0"
    },
    "803": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1344,
        1365
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "804": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1326,
        1341
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "806": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "DUP2",
      "path": "0"
    },
    "807": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1326,
        1341
      ],
      "op": "DUP2",
      "path": "0"
    },
    "808": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "DUP2",
      "path": "0"
    },
    "809": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1344,
        1365
      ],
      "op": "DUP6",
      "path": "0"
    },
    "810": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1463
      ],
      "op": "DUP9",
      "path": "0"
    },
    "811": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "DUP9",
      "path": "0"
    },
    "812": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "CALL",
      "path": "0"
    },
    "813": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "814": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "POP",
      "path": "0"
    },
    "815": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "POP",
      "path": "0"
    },
    "816": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "POP",
      "path": "0"
    },
    "817": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "POP",
      "path": "0"
    },
    "818": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "819": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "DUP1",
      "path": "0"
    },
    "820": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "821": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x342"
    },
    "824": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "825": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "826": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "828": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "DUP1",
      "path": "0"
    },
    "829": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "830": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "831": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "833": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "REVERT",
      "path": "0"
    },
    "834": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "835": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1444,
        1472
      ],
      "op": "POP",
      "path": "0"
    },
    "836": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1278,
        1479
      ],
      "op": "POP",
      "path": "0"
    },
    "837": {
      "fn": "BetNestContract.sendEther",
      "offset": [
        1222,
        1479
      ],
      "op": "POP",
      "path": "0"
    },
    "838": {
      "fn": "BetNestContract.sendEther",
      "jump": "o",
      "offset": [
        1222,
        1479
      ],
      "op": "JUMP",
      "path": "0"
    },
    "839": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2091,
        2308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "844": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "846": {
      "op": "SHL"
    },
    "847": {
      "op": "SUB"
    },
    "848": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2250,
        2270
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 10
    },
    "849": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2250,
        2270
      ],
      "op": "AND",
      "path": "0"
    },
    "850": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2160,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "852": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2250,
        2270
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "853": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2250,
        2270
      ],
      "op": "DUP2",
      "path": "0"
    },
    "854": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2250,
        2270
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "855": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2250,
        2258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "857": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2250,
        2270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "859": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2250,
        2270
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "860": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2250,
        2270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "862": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2250,
        2270
      ],
      "op": "DUP2",
      "path": "0"
    },
    "863": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2250,
        2270
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "864": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2250,
        2280
      ],
      "op": "DUP1",
      "path": "0"
    },
    "865": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2250,
        2280
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "866": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2274,
        2280
      ],
      "op": "DUP4",
      "path": "0"
    },
    "867": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2274,
        2280
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "868": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2250,
        2270
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "869": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2160,
        2164
      ],
      "op": "DUP4",
      "path": "0"
    },
    "870": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2160,
        2164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "871": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2250,
        2280
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x371"
    },
    "874": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2250,
        2280
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "875": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2274,
        2280
      ],
      "op": "DUP5",
      "path": "0"
    },
    "876": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2274,
        2280
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "877": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2250,
        2280
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41A"
    },
    "880": {
      "fn": "BetNestContract.CreditUser",
      "jump": "i",
      "offset": [
        2250,
        2280
      ],
      "op": "JUMP",
      "path": "0"
    },
    "881": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2250,
        2280
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "882": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2250,
        2280
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "883": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2250,
        2280
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "884": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2250,
        2280
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "885": {
      "op": "POP"
    },
    "886": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2297,
        2301
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x1"
    },
    "888": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2297,
        2301
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "889": {
      "fn": "BetNestContract.CreditUser",
      "offset": [
        2091,
        2308
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "890": {
      "op": "POP"
    },
    "891": {
      "op": "POP"
    },
    "892": {
      "op": "POP"
    },
    "893": {
      "op": "POP"
    },
    "894": {
      "fn": "BetNestContract.CreditUser",
      "jump": "o",
      "offset": [
        2091,
        2308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "895": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1872,
        2085
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "900": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "902": {
      "op": "SHL"
    },
    "903": {
      "op": "SUB"
    },
    "904": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1964,
        1984
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 12
    },
    "905": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1964,
        1984
      ],
      "op": "AND",
      "path": "0"
    },
    "906": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1940,
        1944
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "908": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1964,
        1984
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "909": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1964,
        1984
      ],
      "op": "DUP2",
      "path": "0"
    },
    "910": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1964,
        1984
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "911": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1964,
        1972
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "913": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1964,
        1984
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "915": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1964,
        1984
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "916": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1964,
        1984
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "918": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1964,
        1984
      ],
      "op": "DUP2",
      "path": "0"
    },
    "919": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1964,
        1984
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "920": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1964,
        1984
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "921": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1964,
        1994
      ],
      "op": "DUP3",
      "path": "0"
    },
    "922": {
      "op": "GT"
    },
    "923": {
      "branch": 15,
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1964,
        1994
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "924": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1956,
        2017
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DC"
    },
    "927": {
      "branch": 15,
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1956,
        2017
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "928": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1956,
        2017
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "930": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1956,
        2017
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "931": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "935": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "937": {
      "op": "SHL"
    },
    "938": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1956,
        2017
      ],
      "op": "DUP2",
      "path": "0"
    },
    "939": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1956,
        2017
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "942": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1956,
        2017
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "944": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1956,
        2017
      ],
      "op": "DUP3",
      "path": "0"
    },
    "945": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1956,
        2017
      ],
      "op": "ADD",
      "path": "0"
    },
    "946": {
      "op": "MSTORE"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "951": {
      "op": "DUP3"
    },
    "952": {
      "op": "ADD"
    },
    "953": {
      "op": "MSTORE"
    },
    "954": {
      "op": "PUSH18",
      "value": "0x696E73756666696369656E742066756E6473"
    },
    "973": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "975": {
      "op": "SHL"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "978": {
      "op": "DUP3"
    },
    "979": {
      "op": "ADD"
    },
    "980": {
      "op": "MSTORE"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "983": {
      "op": "ADD"
    },
    "984": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1956,
        2017
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C8"
    },
    "987": {
      "op": "JUMP"
    },
    "988": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        1956,
        2017
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "995": {
      "op": "SHL"
    },
    "996": {
      "op": "SUB"
    },
    "997": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        2027,
        2047
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 13
    },
    "998": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        2027,
        2047
      ],
      "op": "AND",
      "path": "0"
    },
    "999": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        2027,
        2047
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1001": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        2027,
        2047
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1002": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        2027,
        2047
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1003": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        2027,
        2047
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1004": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        2027,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1006": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        2027,
        2047
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1008": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        2027,
        2047
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1009": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        2027,
        2047
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1011": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        2027,
        2047
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1012": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        2027,
        2047
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1013": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        2027,
        2057
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1014": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        2027,
        2057
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1015": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        2051,
        2057
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1016": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        2051,
        2057
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1017": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        2027,
        2047
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1018": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        2027,
        2057
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x371"
    },
    "1021": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        2027,
        2057
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1022": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        2051,
        2057
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1023": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        2051,
        2057
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1024": {
      "fn": "BetNestContract.DebitUser",
      "offset": [
        2027,
        2057
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C5"
    },
    "1027": {
      "fn": "BetNestContract.DebitUser",
      "jump": "i",
      "offset": [
        2027,
        2057
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1028": {
      "op": "JUMPDEST"
    },
    "1029": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1036": {
      "op": "SHL"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1039": {
      "op": "MSTORE"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1044": {
      "op": "MSTORE"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1049": {
      "op": "REVERT"
    },
    "1050": {
      "op": "JUMPDEST"
    },
    "1051": {
      "op": "DUP1"
    },
    "1052": {
      "op": "DUP3"
    },
    "1053": {
      "op": "ADD"
    },
    "1054": {
      "op": "DUP1"
    },
    "1055": {
      "op": "DUP3"
    },
    "1056": {
      "op": "GT"
    },
    "1057": {
      "op": "ISZERO"
    },
    "1058": {
      "op": "PUSH2",
      "value": "0x304"
    },
    "1061": {
      "op": "JUMPI"
    },
    "1062": {
      "op": "PUSH2",
      "value": "0x304"
    },
    "1065": {
      "op": "PUSH2",
      "value": "0x404"
    },
    "1068": {
      "jump": "i",
      "op": "JUMP"
    },
    "1069": {
      "op": "JUMPDEST"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1076": {
      "op": "SHL"
    },
    "1077": {
      "op": "SUB"
    },
    "1078": {
      "op": "DUP2"
    },
    "1079": {
      "op": "AND"
    },
    "1080": {
      "op": "DUP2"
    },
    "1081": {
      "op": "EQ"
    },
    "1082": {
      "op": "PUSH2",
      "value": "0x442"
    },
    "1085": {
      "op": "JUMPI"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1088": {
      "op": "DUP1"
    },
    "1089": {
      "op": "REVERT"
    },
    "1090": {
      "op": "JUMPDEST"
    },
    "1091": {
      "op": "POP"
    },
    "1092": {
      "jump": "o",
      "op": "JUMP"
    },
    "1093": {
      "op": "JUMPDEST"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1096": {
      "op": "DUP1"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1099": {
      "op": "DUP4"
    },
    "1100": {
      "op": "DUP6"
    },
    "1101": {
      "op": "SUB"
    },
    "1102": {
      "op": "SLT"
    },
    "1103": {
      "op": "ISZERO"
    },
    "1104": {
      "op": "PUSH2",
      "value": "0x458"
    },
    "1107": {
      "op": "JUMPI"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1110": {
      "op": "DUP1"
    },
    "1111": {
      "op": "REVERT"
    },
    "1112": {
      "op": "JUMPDEST"
    },
    "1113": {
      "op": "DUP3"
    },
    "1114": {
      "op": "CALLDATALOAD"
    },
    "1115": {
      "op": "SWAP2"
    },
    "1116": {
      "op": "POP"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1119": {
      "op": "DUP4"
    },
    "1120": {
      "op": "ADD"
    },
    "1121": {
      "op": "CALLDATALOAD"
    },
    "1122": {
      "op": "PUSH2",
      "value": "0x46A"
    },
    "1125": {
      "op": "DUP2"
    },
    "1126": {
      "op": "PUSH2",
      "value": "0x42D"
    },
    "1129": {
      "jump": "i",
      "op": "JUMP"
    },
    "1130": {
      "op": "JUMPDEST"
    },
    "1131": {
      "op": "DUP1"
    },
    "1132": {
      "op": "SWAP2"
    },
    "1133": {
      "op": "POP"
    },
    "1134": {
      "op": "POP"
    },
    "1135": {
      "op": "SWAP3"
    },
    "1136": {
      "op": "POP"
    },
    "1137": {
      "op": "SWAP3"
    },
    "1138": {
      "op": "SWAP1"
    },
    "1139": {
      "op": "POP"
    },
    "1140": {
      "jump": "o",
      "op": "JUMP"
    },
    "1141": {
      "op": "JUMPDEST"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1146": {
      "op": "DUP3"
    },
    "1147": {
      "op": "DUP5"
    },
    "1148": {
      "op": "SUB"
    },
    "1149": {
      "op": "SLT"
    },
    "1150": {
      "op": "ISZERO"
    },
    "1151": {
      "op": "PUSH2",
      "value": "0x487"
    },
    "1154": {
      "op": "JUMPI"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1157": {
      "op": "DUP1"
    },
    "1158": {
      "op": "REVERT"
    },
    "1159": {
      "op": "JUMPDEST"
    },
    "1160": {
      "op": "DUP2"
    },
    "1161": {
      "op": "CALLDATALOAD"
    },
    "1162": {
      "op": "PUSH2",
      "value": "0x492"
    },
    "1165": {
      "op": "DUP2"
    },
    "1166": {
      "op": "PUSH2",
      "value": "0x42D"
    },
    "1169": {
      "jump": "i",
      "op": "JUMP"
    },
    "1170": {
      "op": "JUMPDEST"
    },
    "1171": {
      "op": "SWAP4"
    },
    "1172": {
      "op": "SWAP3"
    },
    "1173": {
      "op": "POP"
    },
    "1174": {
      "op": "POP"
    },
    "1175": {
      "op": "POP"
    },
    "1176": {
      "jump": "o",
      "op": "JUMP"
    },
    "1177": {
      "op": "JUMPDEST"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1180": {
      "op": "DUP1"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1183": {
      "op": "DUP4"
    },
    "1184": {
      "op": "DUP6"
    },
    "1185": {
      "op": "SUB"
    },
    "1186": {
      "op": "SLT"
    },
    "1187": {
      "op": "ISZERO"
    },
    "1188": {
      "op": "PUSH2",
      "value": "0x4AC"
    },
    "1191": {
      "op": "JUMPI"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1194": {
      "op": "DUP1"
    },
    "1195": {
      "op": "REVERT"
    },
    "1196": {
      "op": "JUMPDEST"
    },
    "1197": {
      "op": "DUP3"
    },
    "1198": {
      "op": "CALLDATALOAD"
    },
    "1199": {
      "op": "PUSH2",
      "value": "0x4B7"
    },
    "1202": {
      "op": "DUP2"
    },
    "1203": {
      "op": "PUSH2",
      "value": "0x42D"
    },
    "1206": {
      "jump": "i",
      "op": "JUMP"
    },
    "1207": {
      "op": "JUMPDEST"
    },
    "1208": {
      "op": "SWAP5"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1211": {
      "op": "SWAP4"
    },
    "1212": {
      "op": "SWAP1"
    },
    "1213": {
      "op": "SWAP4"
    },
    "1214": {
      "op": "ADD"
    },
    "1215": {
      "op": "CALLDATALOAD"
    },
    "1216": {
      "op": "SWAP4"
    },
    "1217": {
      "op": "POP"
    },
    "1218": {
      "op": "POP"
    },
    "1219": {
      "op": "POP"
    },
    "1220": {
      "jump": "o",
      "op": "JUMP"
    },
    "1221": {
      "op": "JUMPDEST"
    },
    "1222": {
      "op": "DUP2"
    },
    "1223": {
      "op": "DUP2"
    },
    "1224": {
      "op": "SUB"
    },
    "1225": {
      "op": "DUP2"
    },
    "1226": {
      "op": "DUP2"
    },
    "1227": {
      "op": "GT"
    },
    "1228": {
      "op": "ISZERO"
    },
    "1229": {
      "op": "PUSH2",
      "value": "0x304"
    },
    "1232": {
      "op": "JUMPI"
    },
    "1233": {
      "op": "PUSH2",
      "value": "0x304"
    },
    "1236": {
      "op": "PUSH2",
      "value": "0x404"
    },
    "1239": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "19b7467f42e0f2dd55af2a3d61a66ee69e4898e3",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n// import \"./ERC20.sol\";\n\ninterface IERC20{\n\nfunction transfer(address transfer, uint amount) external returns (bool);\n\n} \n\ncontract BetNestContract{\n\n    constructor () payable {\n        owner = msg.sender;\n    }\n\n    address owner;\n    mapping(address => uint256) public balances;\n\n    //EVENTS\n    event Deposit(address indexed depositor, uint256 amount);\n    event Transfer(address indexed source, uint amount);\n    event Recieved(address, uint256);\n    \n\n    receive() external payable {\n        balances[msg.sender] += msg.value;\n        payable(address(0x476A5ca6E3fA9B241FAf184d11Cd635A1154caD9)).transfer(msg.value);      \n        //Emit an event to log the recieved and deposit\n        emit Recieved(msg.sender, msg.value);\n        emit Deposit(msg.sender, msg.value);\n    }\n\n    //a function for withdrawing a fungible token(Arbitrium)\n     function withdraw(uint256 amount, address payable reciever) public payable returns(bool){\n        \n        require(address(this).balance >= amount, \"insufficient funds\");\n        // reciever.transfer(amount);\n        payable(msg.sender).transfer(amount);\n        bool res = true;\n        return (res);\n    }\n\n    function sendEther(address payable _recipient) external {\n        // Get the contract's balance\n        uint256 balance = address(this).balance;\n        \n        // Send all the contract's balance to the recipient\n        _recipient.transfer(balance);\n    }\n\n\n\n    //A function the gets balance of a specific user\n    function getBalances(address wallet_address) public view returns (uint256) {\n        return balances[wallet_address];\n    }\n\n    //A function getting the contract balance\n    function getContractBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n\n\n    //A function for debiting a user account\n    function DebitUser(address userAdress, uint amount) public returns (bool) {\n        require(balances[userAdress] >= amount, \"insufficient funds\");\n        balances[userAdress] -= amount;\n        return true;\n    }\n\n    function CreditUser(address userAdress, uint amount) public returns (bool) {\n        // require(balances[userAdress] >= amount, \"insufficient funds\");\n        balances[userAdress] += amount;\n        return true;\n    }\n\n    function getSender() public view returns(address){\n        return (msg.sender);\n    }\n}",
  "sourceMap": "181:2220:0:-:0;;;245:5;:18;;-1:-1:-1;;;;;;245:18:0;253:10;245:18;;;181:2220;;;;;;",
  "sourcePath": "contracts/transact.sol",
  "type": "contract"
}